library(dplyr)
exCSV <- read.csv("income.csv",stringsAsFactors = FALSE)
exCSV
class(exCSV$ID)
class(exCSV$Income)
str(exCSV)
Gender<- as.factor(income$Gender)
Gender<- as.factor(exCSV$Gender)
str(exCSV)
class(exCSV$Gender)
exCSV$Gender<- as.factor(exCSV$Gender)
class(exCSV$Gender)
summary(exCSV)
ggplot(data=income)+geom_histogram
library(ggplot2)
ggplot(data=income)+geom_histogram
hist(income)
hist(exCSV$Income)
exCSV$Income<- exCSV$Income * 100
hist(exCSV$Income)
hist(exCSV$Income,x="Income",y="Number")
labels<-c("Male","Female")
pie(exCSV$Gender,labels)
tabel(exCSV$Gender)
table(exCSV$Gender)
labels<-c("Male","Female")
pie(x,labels)
a<-table(exCSV$Gender)
pie(a,labels)
prop.table(a)
prop.table(a * 100)
prop.table(a)*100
boxplot(exCSV$Income)
quantile(exCSV$Income)
exCSV$Income<- exCSV(exCSV$Income>20000,)
exCSV$Income<- exCSV(incom$Income>20000,)
exCSV$Income<- income(incom$Income>20000,)
exCSV$Income<- income[incom$Income>20000,]
exCSV$Income<- income[income$Income>20000,]
exCSV$Income<- exCSV[exCSV$Income>20000,]
exCSV$Income<- income[income$Income>=20000,]
eex<- income[income$Income>=20000,]
hist(exCSV$Age)
boxplot(exCSV$Age)
data.frame(exCSV$ID == NULL)
data.frame(exCSV$ID = NULL)
data.frame(exCSV$ID <- NULL)
exCSV$ID <- NULL
print(exCSV$ID <- NULL)
hist(exCSV$Education)
boxplot(exCSV$Education)
quantile(exCSV$Education)
lm()
read.csv("income.csv",stringsAsFactors = FALSE)
model<- lm(income ~ Age,data =income)
model<- lm(Income ~ Age,data =income)
model1<- lm(Income ~ Age,data =income)
exCSV<- read.csv("income.csv",stringsAsFactors = FALSE)
model1<- lm(Income ~ Age,data =exCSV)
model1<- lm(Income ~ Age,data =exCSV)
summary(model1)
model2<- lm(Income ~ Age,Education,data =exCSV)
model2<- lm(Income ~ Age,Education,Gender,data =exCSV)
model3<- lm(Income ~ Age,Education,Gender,data =exCSV)
summary(model2)
summary(model3)
summary(model1)
model2<- lm(Income ~ Age + Education,data =exCSV)
model3<- lm(Income ~ Age + Education + Gender,data =exCSV)
summary(model2)
summary(model3)
model2<- lm(Income ~ Age + Education,data =exCSV)
summary(model2)
model1<- lm(Income ~ Age,data =exCSV)
summary(model1)
cbind(Age,Education)
Age <- 25
Education <-16
cbind(Age,Education)
x<-cbind(Age,Education)
as.data.frame(x)
test<- as.data.frame(x)
predict(model2,test)
save.image("model2.Rdata")
rm("Age")
rm("Education")
rm("income")
rm("model1")
rm("model3")
rm("exCSV")
rm("model1")
rm("model3")
save.image("model2.Rdata")
load("model2.Rdata")
predict(model2,test)
test <- as.data.frame(cbind(Age,Education))
test <- as.data.frame(cbind(Age,Education))
Age<-20
Educaation <-12
test <- as.data.frame(cbind(Age,Education))
predict(model2,test)
exCSV<- read.csv("churn.csv",stringsAsFactors = FALSE)
exCSV
summary(exCSV)
str(exCSV)
hist(exCSV$Churned)
boxplot(exCSV$Churned)
pie(table(exCSV$Churned))
chur<-as.factor(exCSV$Churned)
chur
class(chur)
ma<-as.factor(exCSV$Married)
class(ma)
str(exCSV)
exCSV$ID <- NULL
model1 <- glm(churned ~ Age,data = exCSV)
model1 <- glm(Churned ~ Age,data = exCSV)
model1 <- glm(Churned ~ .,data = exCSV)
model2 <- glm(Churned ~ .,data = exCSV)
model3 <- glm(Churned ~ Age,data = exCSV,family = "binomial")
summary(model1)
summary(model2)
summary(model1)
summary(model2)
summary(model3)
model4 <- glm(Churned ~ .,data = exCSV,family ="binomial")
summary(model4)
summary(model2)
summary(model4)
model4 <- glm(Churned ~ .,data = exCSV,family ="binomial")
summary(model4)
test<-as.data.frame(Age)
test
predict(model4,test)
predict(model3,test)
predict(model3,test,type ="response")
predict(model4,test,type ="response")
Married <- YES
predict(model4,test,type ="response")
test<-as.data.frame(Age)
test<-as.data.frame(cbind(Age,Married))
test<-as.data.frame(cbind(Age,Married))
Married <- YES
Married <- 1
test<-as.data.frame(cbind(Age,Married))
test
predict(model4,test,type ="response")
cust_years<- 3
test<-as.data.frame(cbind(Age,Married,cust_years))
test
predict(model4,test,type ="response")
test<-as.data.frame(cbind(Age,Married,Cust_years))
Cust_years<- 3
test<-as.data.frame(cbind(Age,Married,Cust_years))
test
predict(model4,test,type ="response")
Churned_contacts <- 2
test<-as.data.frame(cbind(Age,Married,Cust_years,Churned_contacts))
test
test<-as.data.frame(cbind(Age,Married,Cust_years,Churned_contacts))
predict(model4,test,type ="response")
install.packages("randomForset")
install.packages("randomForest")
library(randomForest)
model1 <- glm(Churned ~ Age,data = exCSV)
model2 <- glm(Churned ~ .,data = exCSV)
summary(model1)
summary(model2)
summary(model1)
model1 <- randomForest(Churned ~ Age,data = exCSV)
model2 <- randomForest(Churned ~ .,data = exCSV)
summary(model1)
summary(model2)
model1 <- randomForest(Churned ~ Age,data = exCSV)
summary(model1)
model1
model2
model1 = randomForest(Churned ~ Age,data = exCSV)
model1
model1 <- randomForest(Churned ~ Age,data = exCSV)
model1
model1 <- randomForest(Churned ~ Age,data = exCSV)
model1
library(tm)
data <- read.csv("tweets.csv",stringsAsFactors = FALSE)
head(data)
corpus <- Corpus(VectorSource(data$Tweet))
corpus[[1]]$content
#all corpus to lowercase
corpus<- tm_map(corpus,tolower)
corpus
#all corpus to lowercase
corpus1<- tm_map(corpus,tolower)
corpus1
#cleaning the data
corpus2<- tm_map(corpus1,removeNumbers)
corpus2<- tm_map(corpus2,removePunctuation)
corpus2[[1]]$content
corpus2[[4]]$content
corpus2[[10]]$content
stopwords("english")
corpus3[[1]]$content
copus3<- tm_map(corpus2, removeWords,c(stopwords("english"),"hi"))
corpus3[[1]]$content
corpus3<- tm_map(corpus2, removeWords,c(stopwords("english"),"hi"))
corpus3[[1]]$content
dtm<- TermDocumentMatrix(corpus3)
class(dtm)
View(dtm)
dtm1<- as.matrix(dtm)
View(dtm1)
wordF<- rowSums(dtm1)
wwordF
wordF<- rowSums(dtm1)
wordF
#data frame with word along frequency
df<- data.frame(word = names(wordF),freq= wordF)
df
view(df)
View(df)
head(df)
head(df[order(-df$freq),],10)
Pwords <- readLines('positive.txt')
Pwords
Nwords<- readLines('negative.txt')
Nwords
pos.match<-  is.na(pos.match)
pos.match<- match(df$word,Pwords)
neg.match<- match(df$word,Nwords)
pos.match =! is.na(pos.match)
pos.match=! is.na(neg.match)
neg.match=! is.na(neg.match)
pos.match =! is.na(pos.match)
pos.match
pos.match = is.na(pos.match)
pos.match
pos.match =! is.na(pos.match)
pos.match
neg.match
score <- sum(pos.match)-sum(neg.match)
score
ifelse(score>0, 'Tweet is positive',
ifelse(score<0, 'Tweet is negative',
'tweet is neutral'))
score
corpus <- Corpus(VectorSource("COmment"))
corpus[[1]]$content
corpus <- Corpus(VectorSource(data$Tweet))
install.packages("rvest")
install.packages("rvest")
install.packages("rvest")
library(rvest)
library(rvest)
dataset <- data.frame()
dataset
url<- "https://www.amazon.in/Mi-XMSH05HM-Band-3-Black/dp/B07HCXQZ4P/ref=zg_mg_electronics_home_1?_encoding=UTF8&psc=1&refRID=KJG5YFPX7ZX14YXKGAYT#customerReviews"
data<- read_html(url)
data
print(url)
print(data)
x<- html_nodes(data,"[class ='a-section celwidget]")
x<- html_nodes(data,"[class ='a-section celwidget']")
username <- html_text(html_nodes(x,"[class ='a-profile-name']"))
View(dataset)
data <- read.csv("grades_km_input.csv")
data
head(data)
data$Student =NULL
#kmeans function
model1 <- kmeans(data,centers =3)
model1
#kmeans function
model1 <- kmeans(data,centers =5)
model1
#kmeans function
model1 <- kmeans(data,centers =2)
model1
#kmeans function
model1 <- kmeans(data,centers =5)
model1
#kmeans function
model1 <- kmeans(data,centers =10)
model1
exCSV<- read.csv("churn.csv",stringsAsFactors = FALSE)
exCSV
summary(exCSV)
str(exCSV)
hist(exCSV$Churned)
boxplot(exCSV$Churned)
pie(table(exCSV$Churned))
boxplot(exCSV$Churned)
view(exCSV$Churned)
View(exCSV$Churned)
print(exCSV$Churned)
